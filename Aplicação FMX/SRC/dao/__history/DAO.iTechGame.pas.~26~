unit DAO.iTechGame;

interface

uses
  RESTRequest4D,

  Data.DB,

  DataSet.Serialize.Adapter.RESTRequest4D,
  DataSet.Serialize.Config,

  FireDAC.Comp.Client,
  FireDAC.Comp.DataSet,
  FireDAC.DApt.Intf,
  FireDAC.DatS,
  FireDAC.Phys.Intf,
  FireDAC.Stan.Error,
  FireDAC.Stan.Intf,
  FireDAC.Stan.Option,
  FireDAC.Stan.Param,

  System.Classes,
  System.JSON,
  System.IOUtils,
  System.SysUtils;

type
  TDmGlobal = class(TDataModule)
    TabTemp: TFDMemTable;
    procedure DataModuleCreate(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    procedure GravadadosAPI(nome, console, categoria, titulo : string; id_console, id_cat, id_titulo : Integer);
    procedure BuscaConsole;
    procedure BuscaCategoria;
    procedure BuscaTitulos;
  end;

implementation
  const
   BASE_URL = 'http://localhost:9001';

{%CLASSGROUP 'FMX.Controls.TControl'}

{$R *.dfm}

procedure TDmGlobal.BuscaConsole;
var
 lResp : IResponse;
begin
   TabTemp.FieldDefs.Clear;

   lResp := TRequest.New.BaseURL(BASE_URL)
            .Resource('/console')
            .ContentType('application/json')
            .Adapters(TDataSetSerializeAdapter.New(TabTemp))
            .Get;

   if lResp.StatusCode <> 200 then
      raise Exception.Create(lResp.Content);
end;

procedure TDmGlobal.BuscaCategoria;
var
 lResp : IResponse;
begin
   TabTemp.FieldDefs.Clear;

   lResp := TRequest.New.BaseURL(BASE_URL)
            .Resource('/categoria')
            .ContentType('application/json')
            .Adapters(TDataSetSerializeAdapter.New(TabTemp))
            .Get;

   if lResp.StatusCode <> 200 then
      raise Exception.Create(lResp.Content);
end;

procedure TDmGlobal.BuscaTitulos;
var
 lResp : IResponse;
begin
   TabTemp.FieldDefs.Clear;

   lResp := TRequest.New.BaseURL(BASE_URL)
            .Resource('/titulo')
            .ContentType('application/json')
            .Adapters(TDataSetSerializeAdapter.New(TabTemp))
            .Get;

   if lResp.StatusCode <> 200 then
      raise Exception.Create(lResp.Content);

end;

procedure TDmGlobal.DataModuleCreate(Sender: TObject);
begin
     TDataSetSerializeConfig.GetInstance.CaseNameDefinition := cndLower;
     TDataSetSerializeConfig.GetInstance.Import.DecimalSeparator := '.';
end;

procedure TDmGlobal.GravadadosAPI(nome, console, categoria, titulo : string; id_console, id_cat, id_titulo : Integer);
var
 json : TJsonObject;
 lResp : TRequest;
begin
    json := TJSONObject.Create;

    json.AddPair('nome', nome);
    json.AddPair('console', console);
    json.AddPair('id_console', TJSONNumber.Create(id_console));
    json.AddPair('categoria', categoria);
    json.AddPair('id_categoria', TJSONNumber.Create(id_cat));
    json.AddPair('titulo', titulo);
    json.AddPair('id_titulo', TJSONNumber.Create(id_titulo));

    lResp := TRequest.New.BaseURL(BASE_URL)

end;

end.
